{"version":3,"sources":["../../src/main/interpreter.js"],"names":["assignment","Assignment","valueOf","String","eval","Number","Interpreter","constructor","parser","parse","expression","ast","context","self","Promise","resolve","type","Expression","callback","AssignmentExpression","left","right","pending","value","Identifier","name","lm","member","computed","text","object","CommaExpression","list","length","c","next","then","TernaryExpression","test","consequent","alternate","CallExpression","callee","parameters","args","Array","p","parameter","result","apply","SelfExpression","ignored","MemberExpression","ArrayExpression","elements","array","element","Property","key","ObjectExpression","properties","property","BinaryExpression","operators","operator","UnaryExpression","prefix","argument","prototype","LogicalExpression","Logical","EqualityExpression","Equality","RelationalExpression","Relational","AdditiveExpression","Additive","MultiplicativeExpression","Multiplicative","Unary","Literal"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAEA,MAAMA,aAAa,qBAAUC,UAAV,CAAqB,GAArB,CAAnB;;AAEA,MAAMC,UAAU;AACZ,KAAC,SAAIC,MAAL,GAAcC,IADF;AAEZ,KAAC,SAAIC,MAAL,GAAcA;AAFF,CAAhB;;IAKaC,W,WAAAA,W,GAAN,MAAMA,WAAN,CAAkB;;AAErBC,gBAAYC,SAAS,oBAArB,EAAmC;AAC/B,aAAKA,MAAL,GAAcA,MAAd;AACH;;AAEDC,UAAMC,UAAN,EAAkB;AACd,aAAKC,GAAL,GAAW,KAAKH,MAAL,CAAYC,KAAZ,CAAkBC,UAAlB,CAAX;AACH;;AAEDN,SAAKQ,OAAL,EAAcC,IAAd,EAAoB;AAChB,aAAKD,OAAL,GAAeA,OAAf;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,eAAO,IAAIC,OAAJ,CAAYC,WAAW,KAAK,KAAKJ,GAAL,CAASK,IAAd,EAAoB,KAAKL,GAAzB,EAA8BI,OAA9B,CAAvB,CAAP;AACH;;AAED,KAAC,SAAIE,UAAL,EAAiB,EAACP,UAAD,EAAjB,EAA+BQ,QAA/B,EAAyC;AACrC,aAAKR,WAAWM,IAAhB,EAAsBN,UAAtB,EAAkCQ,QAAlC;AACH;;AAED,KAAC,SAAIC,oBAAL,EAA2B,EAACC,IAAD,EAAOC,KAAP,EAA3B,EAA0CH,QAA1C,EAAoD;AAChDA,iBAASI,OAAT,GAAmB,CAAnB;;AAEA,aAAKD,MAAML,IAAX,EAAiBK,KAAjB,EAAwBE,SAASvB,WAAWkB,QAAX,EAAqB,OAArB,EAA8BK,KAA9B,CAAjC;;AAEA,YAAIH,KAAKJ,IAAL,KAAc,SAAIQ,UAAtB,EAAkC;AAC9BxB,uBAAWkB,QAAX,EAAqB,QAArB,EAA+BE,KAAKK,IAApC;AACAzB,uBAAWkB,QAAX,EAAqB,QAArB,EAA+B,KAAKN,OAApC;AACH,SAHD,MAGO;AACH,kBAAMc,KAAKN,KAAKO,MAAhB;AACA,gBAAIP,KAAKQ,QAAT,EAAmB;AACf,qBAAKF,GAAGV,IAAR,EAAcU,EAAd,EAAkBC,UAAU3B,WAAWkB,QAAX,EAAqB,QAArB,EAA+BS,MAA/B,CAA5B;AACH,aAFD,MAEO;AACH3B,2BAAWkB,QAAX,EAAqB,QAArB,EAA+BQ,GAAGD,IAAH,IAAWvB,QAAQwB,GAAGV,IAAX,EAAiBU,GAAGG,IAApB,CAA1C;AACH;AACD,iBAAKT,KAAKU,MAAL,CAAYd,IAAjB,EAAuBI,KAAKU,MAA5B,EAAoCA,UAAU9B,WAAWkB,QAAX,EAAqB,QAArB,EAA+BY,MAA/B,CAA9C;AACH;AACJ;;AAED,KAAC,SAAIC,eAAL,EAAsB,EAACC,IAAD,EAAtB,EAA8Bd,QAA9B,EAAwC;AACpC,cAAMI,UAAUU,KAAKC,MAArB;AACA,YAAIC,CAAJ;AAAA,YAAOxB,aAAasB,KAAKE,IAAI,CAAT,CAApB;;AAEA,YAAIZ,OAAJ,EAAa;AACT,kBAAMa,OAAOZ,SAAS;AAClB,oBAAIA,iBAAiBT,OAArB,EAA8B;AAC1B,2BAAOS,MAAMa,IAAN,CAAWD,IAAX,CAAP;AACH;AACD,oBAAI,EAAED,CAAF,GAAMZ,OAAV,EAAmB;AACfZ,iCAAasB,KAAKE,CAAL,CAAb;AACA,yBAAKxB,WAAWM,IAAhB,EAAsBN,UAAtB,EAAkCyB,IAAlC;AACH,iBAHD,MAGO;AACHjB,6BAASK,KAAT;AACH;AACJ,aAVD;AAWA,iBAAKb,WAAWM,IAAhB,EAAsBN,UAAtB,EAAkCyB,IAAlC;AACH;AACJ;;AAED,KAAC,SAAIE,iBAAL,EAAwB,EAACC,IAAD,EAAOC,UAAP,EAAmBC,SAAnB,EAAxB,EAAuDtB,QAAvD,EAAiE;AAC7D,aAAKoB,KAAKtB,IAAV,EAAgBsB,IAAhB,EAAsBA,QAAQ;AAC1B,gBAAIA,IAAJ,EAAU;AACN,qBAAKC,WAAWvB,IAAhB,EAAsBuB,UAAtB,EAAkCrB,QAAlC;AACH,aAFD,MAEO;AACH,qBAAKsB,UAAUxB,IAAf,EAAqBwB,SAArB,EAAgCtB,QAAhC;AACH;AACJ,SAND;AAOH;;AAED,KAAC,SAAIM,UAAL,EAAiB,EAACC,IAAD,EAAjB,EAAyBP,QAAzB,EAAmC;AAC/B,cAAMK,QAAQ,KAAKX,OAAL,CAAaa,IAAb,CAAd;AACA,YAAIF,iBAAiBT,OAArB,EAA8B;AAC1B,mBAAOS,MAAMa,IAAN,CAAWlB,QAAX,CAAP;AACH;AACDA,iBAASK,KAAT;AACH;;AAED,KAAC,SAAIpB,MAAL,EAAa,EAAC0B,IAAD,EAAb,EAAqBX,QAArB,EAA+B;AAC3BA,iBAASd,KAAKyB,IAAL,CAAT;AACH;;AAED,KAAC,SAAIxB,MAAL,EAAa,EAACwB,IAAD,EAAb,EAAqBX,QAArB,EAA+B;AAC3BA,iBAASb,OAAOwB,IAAP,CAAT;AACH;;AAED,KAAC,SAAIY,cAAL,EAAqB,EAACC,MAAD,EAASC,UAAT,EAArB,EAA2CzB,QAA3C,EAAqD;;AAEjD,aAAKwB,OAAO1B,IAAZ,EAAkB0B,MAAlB,EAA0B,CAACA,MAAD,EAAS7B,OAAO,KAAKA,IAArB,KAA8B;AACpD,kBAAMoB,SAASU,WAAWV,MAA1B;AAAA,kBAAkCW,OAAO,IAAIC,KAAJ,CAAUZ,MAAV,CAAzC;AACA,gBAAIa,IAAI,CAAR;AAAA,gBAAWC,YAAYJ,WAAWG,CAAX,CAAvB;;AAEA,gBAAIb,MAAJ,EAAY;AACR,sBAAME,OAAOZ,SAAS;AAClB,wBAAIA,iBAAiBT,OAArB,EAA8B;AAC1B,+BAAOS,MAAMa,IAAN,CAAWD,IAAX,CAAP;AACH;AACDS,yBAAKE,CAAL,IAAUvB,KAAV;AACA,wBAAI,EAAEuB,CAAF,GAAMb,MAAV,EAAkB;AACdc,oCAAYJ,WAAWG,CAAX,CAAZ;AACA,+BAAO,KAAKC,UAAU/B,IAAf,EAAqB+B,SAArB,EAAgCZ,IAAhC,CAAP;AACH;AACD,0BAAMa,SAASN,OAAOO,KAAP,CAAapC,IAAb,EAAmB+B,IAAnB,CAAf;AACA,wBAAII,kBAAkBlC,OAAtB,EAA+B;AAC3B,+BAAOkC,OAAOZ,IAAP,CAAYlB,QAAZ,CAAP;AACH;AACDA,6BAAS8B,MAAT;AACH,iBAdD;AAeA,uBAAO,KAAKD,UAAU/B,IAAf,EAAqB+B,SAArB,EAAgCZ,IAAhC,CAAP;AACH;;AAED,kBAAMa,SAASN,OAAOO,KAAP,CAAapC,IAAb,CAAf;AACA,gBAAImC,kBAAkBlC,OAAtB,EAA+B;AAC3B,uBAAOkC,OAAOZ,IAAP,CAAYlB,QAAZ,CAAP;AACH;AACDA,qBAAS8B,MAAT;AACH,SA5BD;AA6BH;;AAED,KAAC,SAAIE,cAAL,EAAqBC,OAArB,EAA8BjC,QAA9B,EAAwC;AACpCA,iBAAS,KAAKL,IAAd;AACH;;AAED,KAAC,SAAIuC,gBAAL,EAAuB,EAACtB,MAAD,EAASH,MAAT,EAAiBC,QAAjB,EAAvB,EAAmDV,QAAnD,EAA6D;AACzD,aAAKY,OAAOd,IAAZ,EAAkBc,MAAlB,EAA0BA,UAAU;AAChC,gBAAIP,KAAJ;;AAEA,gBAAIK,QAAJ,EAAc,OAAO,KAAKD,OAAOX,IAAZ,EAAkBW,MAAlB,EAA0BA,UAAU;AACrD,oBAAI,CAACJ,QAAQO,OAAOH,MAAP,CAAT,aAAoCb,OAAxC,EAAiD;AAC7C,2BAAOS,MAAMa,IAAN,CAAWlB,QAAX,CAAP;AACH;AACDA,yBAASK,KAAT,EAAgBO,MAAhB;AACH,aALoB,CAAP;;AAOd,gBAAI,CAACP,QAAQO,OAAOH,OAAOF,IAAP,IAAevB,QAAQyB,OAAOX,IAAf,EAAqBW,OAAOE,IAA5B,CAAtB,CAAT,aAA8Ef,OAAlF,EAA2F;AACvF,uBAAOS,MAAMa,IAAN,CAAWlB,QAAX,CAAP;AACH;AACDA,qBAASK,KAAT,EAAgBO,MAAhB;AACH,SAdD;AAeH;;AAED,KAAC,SAAIuB,eAAL,EAAsB,EAACC,QAAD,EAAtB,EAAkCpC,QAAlC,EAA4C;AACxC,cAAMe,SAASqB,SAASrB,MAAxB;AAAA,cAAgCsB,QAAQ,IAAIV,KAAJ,CAAUZ,MAAV,CAAxC;AACA,YAAIa,IAAI,CAAR;AAAA,YAAWU,UAAUF,SAASR,CAAT,CAArB;;AAEA,YAAIb,MAAJ,EAAY;AACR,kBAAME,OAAOZ,SAAS;AAClB,oBAAIA,iBAAiBT,OAArB,EAA8B;AAC1B,2BAAOS,MAAMa,IAAN,CAAWD,IAAX,CAAP;AACH;AACDoB,sBAAMT,CAAN,IAAWvB,KAAX;AACA,oBAAI,EAAEuB,CAAF,GAAMb,MAAV,EAAkB;AACduB,8BAAUF,SAASR,CAAT,CAAV;AACA,2BAAO,KAAKU,QAAQxC,IAAb,EAAmBwC,OAAnB,EAA4BrB,IAA5B,CAAP;AACH,iBAHD,MAGO;AACHjB,6BAASqC,KAAT;AACH;AACJ,aAXD;AAYA,mBAAO,KAAKC,QAAQxC,IAAb,EAAmBwC,OAAnB,EAA4BrB,IAA5B,CAAP;AACH;;AAEDjB,iBAASqC,KAAT;AACH;;AAED;;;;;;;AAOA,KAAC,SAAIE,QAAL,EAAe,EAACC,GAAD,EAAMnC,KAAN,EAAaK,QAAb,EAAf,EAAuCV,QAAvC,EAAiD;AAC7C,YAAIU,QAAJ,EAAc;AACV,iBAAK8B,IAAI1C,IAAT,EAAe0C,GAAf,EAAoBA,OAAO,KAAKnC,MAAMP,IAAX,EAAiBO,KAAjB,EAAwBA,SAASL,SAASwC,GAAT,EAAcnC,KAAd,CAAjC,CAA3B;AACH,SAFD,MAEO;AACH,iBAAKA,MAAMP,IAAX,EAAiBO,KAAjB,EAAwBA,SAASL,SAASwC,IAAIjC,IAAJ,IAAYvB,QAAQwD,IAAI1C,IAAZ,EAAkB0C,IAAI7B,IAAtB,CAArB,EAAkDN,KAAlD,CAAjC;AACH;AACJ;;AAED,KAAC,SAAIoC,gBAAL,EAAuB,EAACC,UAAD,EAAvB,EAAqC1C,QAArC,EAA+C;AAC3C,cAAMe,SAAS2B,WAAW3B,MAA1B;AAAA,cAAkCH,SAAS,EAA3C;AACA,YAAIgB,IAAI,CAAR;AAAA,YAAWe,WAAWD,WAAWd,CAAX,CAAtB;;AAEA,YAAIb,MAAJ,EAAY;AACR,kBAAME,OAAO,CAACuB,GAAD,EAAMnC,KAAN,KAAgB;AACzB,oBAAImC,eAAe5C,OAAnB,EAA4B;AACxB,2BAAO4C,IAAItB,IAAJ,CAASD,IAAT,CAAP;AACH;AACD,oBAAIZ,iBAAiBT,OAArB,EAA8B;AAC1B,2BAAOS,MAAMa,IAAN,CAAWD,IAAX,CAAP;AACH;AACDL,uBAAO4B,GAAP,IAAcnC,KAAd;AACA,oBAAI,EAAEuB,CAAF,GAAMb,MAAV,EAAkB;AACd4B,+BAAWD,WAAWd,CAAX,CAAX;AACA,yBAAKe,SAAS7C,IAAd,EAAoB6C,QAApB,EAA8B1B,IAA9B;AACH,iBAHD,MAGO;AACHjB,6BAASY,MAAT;AACH;AACJ,aAdD;AAeA,mBAAO,KAAK+B,SAAS7C,IAAd,EAAoB6C,QAApB,EAA8B1B,IAA9B,CAAP;AACH;;AAEDjB,iBAASY,MAAT;AACH;;AA1MoB,C;;;AA+MzB,MAAMgC,mBAAoBC,SAAD,IAAe,UAAU,EAAC3C,IAAD,EAAOC,KAAP,EAAc2C,QAAd,EAAV,EAAmC9C,QAAnC,EAA6C;AACjFA,aAASI,OAAT,GAAmB,CAAnB;AACA,SAAKF,KAAKJ,IAAV,EAAgBI,IAAhB,EAAsBA,QAAQ2C,UAAUC,QAAV,EAAoB9C,QAApB,EAA8B,MAA9B,EAAsCE,IAAtC,CAA9B;AACA,SAAKC,MAAML,IAAX,EAAiBK,KAAjB,EAAwBA,SAAS0C,UAAUC,QAAV,EAAoB9C,QAApB,EAA8B,OAA9B,EAAuCG,KAAvC,CAAjC;AACH,CAJD;;AAOA,MAAM4C,kBAAmBF,SAAD,IAAe,UAAU,EAACG,MAAD,EAASF,QAAT,EAAmBG,QAAnB,EAAV,EAAwCjD,QAAxC,EAAkD;AACrFA,aAASI,OAAT,GAAmB,CAAnB;AACA,SAAK6C,SAASnD,IAAd,EAAoBmD,QAApB,EAA8BA,YAAYJ,UAAUC,QAAV,EAAoB9C,QAApB,EAA8B,UAA9B,EAA0CiD,QAA1C,CAA1C;AACH,CAHD;;AAMA7D,YAAY8D,SAAZ,CAAsB,SAAIC,iBAA1B,IAA+CP,iBAAiB,qBAAUQ,OAA3B,CAA/C;AACAhE,YAAY8D,SAAZ,CAAsB,SAAIG,kBAA1B,IAAgDT,iBAAiB,qBAAUU,QAA3B,CAAhD;AACAlE,YAAY8D,SAAZ,CAAsB,SAAIK,oBAA1B,IAAkDX,iBAAiB,qBAAUY,UAA3B,CAAlD;AACApE,YAAY8D,SAAZ,CAAsB,SAAIO,kBAA1B,IAAgDb,iBAAiB,qBAAUc,QAA3B,CAAhD;AACAtE,YAAY8D,SAAZ,CAAsB,SAAIS,wBAA1B,IAAsDf,iBAAiB,qBAAUgB,cAA3B,CAAtD;AACAxE,YAAY8D,SAAZ,CAAsB,SAAIH,eAA1B,IAA6CA,gBAAgB,qBAAUc,KAA1B,CAA7C;;AAEAzE,YAAY8D,SAAZ,CAAsB,SAAIY,OAA1B,IAAqC,UAAU,EAACzD,KAAD,EAAV,EAAmBL,QAAnB,EAA6B;AAC9DA,aAASK,KAAT;AACH,CAFD","file":"interpreter.js","sourcesContent":["import {Operators} from \"./operators.js\";\nimport {Parser} from \"./parser.js\";\nimport {AST} from \"./ast.js\";\n\nconst assignment = Operators.Assignment['='];\n\nconst valueOf = {\n    [AST.String]: eval,\n    [AST.Number]: Number\n};\n\nexport class Interpreter {\n\n    constructor(parser = new Parser()) {\n        this.parser = parser;\n    }\n\n    parse(expression) {\n        this.ast = this.parser.parse(expression);\n    }\n\n    eval(context, self) {\n        this.context = context;\n        this.self = self;\n        return new Promise(resolve => this[this.ast.type](this.ast, resolve));\n    }\n\n    [AST.Expression]({expression}, callback) {\n        this[expression.type](expression, callback);\n    }\n\n    [AST.AssignmentExpression]({left, right}, callback) {\n        callback.pending = 3;\n\n        this[right.type](right, value => assignment(callback, 'value', value));\n\n        if (left.type === AST.Identifier) {\n            assignment(callback, 'member', left.name);\n            assignment(callback, 'object', this.context);\n        } else {\n            const lm = left.member;\n            if (left.computed) {\n                this[lm.type](lm, member => assignment(callback, 'member', member));\n            } else {\n                assignment(callback, 'member', lm.name || valueOf[lm.type](lm.text));\n            }\n            this[left.object.type](left.object, object => assignment(callback, 'object', object));\n        }\n    }\n\n    [AST.CommaExpression]({list}, callback) {\n        const pending = list.length;\n        let c, expression = list[c = 0];\n\n        if (pending) {\n            const next = value => {\n                if (value instanceof Promise) {\n                    return value.then(next);\n                }\n                if (++c < pending) {\n                    expression = list[c];\n                    this[expression.type](expression, next);\n                } else {\n                    callback(value);\n                }\n            };\n            this[expression.type](expression, next);\n        }\n    }\n\n    [AST.TernaryExpression]({test, consequent, alternate}, callback) {\n        this[test.type](test, test => {\n            if (test) {\n                this[consequent.type](consequent, callback);\n            } else {\n                this[alternate.type](alternate, callback);\n            }\n        });\n    }\n\n    [AST.Identifier]({name}, callback) {\n        const value = this.context[name];\n        if (value instanceof Promise) {\n            return value.then(callback);\n        }\n        callback(value);\n    }\n\n    [AST.String]({text}, callback) {\n        callback(eval(text));\n    }\n\n    [AST.Number]({text}, callback) {\n        callback(Number(text));\n    }\n\n    [AST.CallExpression]({callee, parameters}, callback) {\n\n        this[callee.type](callee, (callee, self = this.self) => {\n            const length = parameters.length, args = new Array(length);\n            let p = 0, parameter = parameters[p];\n\n            if (length) {\n                const next = value => {\n                    if (value instanceof Promise) {\n                        return value.then(next);\n                    }\n                    args[p] = value;\n                    if (++p < length) {\n                        parameter = parameters[p];\n                        return this[parameter.type](parameter, next);\n                    }\n                    const result = callee.apply(self, args);\n                    if (result instanceof Promise) {\n                        return result.then(callback);\n                    }\n                    callback(result);\n                };\n                return this[parameter.type](parameter, next);\n            }\n\n            const result = callee.apply(self);\n            if (result instanceof Promise) {\n                return result.then(callback);\n            }\n            callback(result);\n        });\n    }\n\n    [AST.SelfExpression](ignored, callback) {\n        callback(this.self);\n    }\n\n    [AST.MemberExpression]({object, member, computed}, callback) {\n        this[object.type](object, object => {\n            let value;\n\n            if (computed) return this[member.type](member, member => {\n                if ((value = object[member]) instanceof Promise) {\n                    return value.then(callback)\n                }\n                callback(value, object);\n            });\n\n            if ((value = object[member.name || valueOf[member.type](member.text)]) instanceof Promise) {\n                return value.then(callback);\n            }\n            callback(value, object)\n        });\n    }\n\n    [AST.ArrayExpression]({elements}, callback) {\n        const length = elements.length, array = new Array(length);\n        let p = 0, element = elements[p];\n\n        if (length) {\n            const next = value => {\n                if (value instanceof Promise) {\n                    return value.then(next);\n                }\n                array[p] = value;\n                if (++p < length) {\n                    element = elements[p];\n                    return this[element.type](element, next);\n                } else {\n                    callback(array);\n                }\n            };\n            return this[element.type](element, next);\n        }\n\n        callback(array);\n    }\n\n    /**\n     *\n     * @param key\n     * @param value\n     * @param computed not used\n     * @param callback\n     */\n    [AST.Property]({key, value, computed}, callback) {\n        if (computed) {\n            this[key.type](key, key => this[value.type](value, value => callback(key, value)));\n        } else {\n            this[value.type](value, value => callback(key.name || valueOf[key.type](key.text), value));\n        }\n    }\n\n    [AST.ObjectExpression]({properties}, callback) {\n        const length = properties.length, object = {};\n        let p = 0, property = properties[p];\n\n        if (length) {\n            const next = (key, value) => {\n                if (key instanceof Promise) {\n                    return key.then(next);\n                }\n                if (value instanceof Promise) {\n                    return value.then(next);\n                }\n                object[key] = value;\n                if (++p < length) {\n                    property = properties[p];\n                    this[property.type](property, next);\n                } else {\n                    callback(object);\n                }\n            };\n            return this[property.type](property, next);\n        }\n\n        callback(object);\n    }\n\n}\n\n\nconst BinaryExpression = (operators) => function ({left, right, operator}, callback) {\n    callback.pending = 2;\n    this[left.type](left, left => operators[operator](callback, 'left', left));\n    this[right.type](right, right => operators[operator](callback, 'right', right));\n};\n\n\nconst UnaryExpression = (operators) => function ({prefix, operator, argument}, callback) {\n    callback.pending = 1;\n    this[argument.type](argument, argument => operators[operator](callback, 'argument', argument));\n};\n\n\nInterpreter.prototype[AST.LogicalExpression] = BinaryExpression(Operators.Logical);\nInterpreter.prototype[AST.EqualityExpression] = BinaryExpression(Operators.Equality);\nInterpreter.prototype[AST.RelationalExpression] = BinaryExpression(Operators.Relational);\nInterpreter.prototype[AST.AdditiveExpression] = BinaryExpression(Operators.Additive);\nInterpreter.prototype[AST.MultiplicativeExpression] = BinaryExpression(Operators.Multiplicative);\nInterpreter.prototype[AST.UnaryExpression] = UnaryExpression(Operators.Unary);\n\nInterpreter.prototype[AST.Literal] = function ({value}, callback) {\n    callback(value);\n};\n\n"]}