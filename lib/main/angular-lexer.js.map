{"version":3,"sources":["../../src/main/angular-lexer.js"],"names":["ESCAPE","OPERATORS","LITERALS","Map","undefined","Lexer","options","prototype","constructor","lex","text","index","tokens","length","ch","charAt","readString","isNumber","peek","readNumber","isIdentifierStart","peekMultichar","readIdent","is","push","isWhitespace","ch2","ch3","op1","op2","op3","token","operator","throwError","chars","indexOf","i","num","codePointAt","isValidIdentifierStart","isIdentifierContinue","isValidIdentifierContinue","cp","charCodeAt","cp1","cp2","isExpOperator","error","start","end","colStr","isDefined","substring","Error","number","lowercase","peekCh","constant","value","Number","slice","identifier","quote","string","rawString","escape","hex","match","String","fromCharCode","parseInt","rep"],"mappings":"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","file":"angular-lexer.js","sourcesContent":["export const ESCAPE = {\n    'n': '\\n',\n    'f': '\\f',\n    'r': '\\r',\n    't': '\\t',\n    'v': '\\v',\n    '\\'': '\\'',\n    '\"': '\"'\n};\n\nexport const OPERATORS = {\n    '+': true,\n    '-': true,\n    '*': true,\n    '/': true,\n    '%': true,\n    '===': true,\n    '!==': true,\n    '==': true,\n    '!=': true,\n    '<': true,\n    '>': true,\n    '<=': true,\n    '>=': true,\n    '&&': true,\n    '||': true,\n    '!': true,\n    '=': true,\n    '|': true\n};\n\nexport const LITERALS = new Map([\n    ['true', true],\n    ['false', false],\n    ['null', null],\n    ['undefined', undefined]\n]);\n\n/**\n * @constructor\n */\nexport var Lexer = function Lexer(options) {\n    this.options = options;\n};\n\nLexer.prototype = {\n    constructor: Lexer,\n\n    lex: function(text) {\n        this.text = text;\n        this.index = 0;\n        this.tokens = [];\n\n        while (this.index < this.text.length) {\n            var ch = this.text.charAt(this.index);\n            if (ch === '\"' || ch === '\\'') {\n                this.readString(ch);\n            } else if (this.isNumber(ch) || ch === '.' && this.isNumber(this.peek())) {\n                this.readNumber();\n            } else if (this.isIdentifierStart(this.peekMultichar())) {\n                this.readIdent();\n            } else if (this.is(ch, '(){}[].,;:?')) {\n                this.tokens.push({index: this.index, text: ch});\n                this.index++;\n            } else if (this.isWhitespace(ch)) {\n                this.index++;\n            } else {\n                var ch2 = ch + this.peek();\n                var ch3 = ch2 + this.peek(2);\n                var op1 = OPERATORS[ch];\n                var op2 = OPERATORS[ch2];\n                var op3 = OPERATORS[ch3];\n                if (op1 || op2 || op3) {\n                    var token = op3 ? ch3 : (op2 ? ch2 : ch);\n                    this.tokens.push({index: this.index, text: token, operator: true});\n                    this.index += token.length;\n                } else {\n                    this.throwError('Unexpected next character ', this.index, this.index + 1);\n                }\n            }\n        }\n        return this.tokens;\n    },\n\n    is: function(ch, chars) {\n        return chars.indexOf(ch) !== -1;\n    },\n\n    peek: function(i) {\n        var num = i || 1;\n        return (this.index + num < this.text.length) ? this.text.charAt(this.index + num) : false;\n    },\n\n    isNumber: function(ch) {\n        return ('0' <= ch && ch <= '9') && typeof ch === 'string';\n    },\n\n    isWhitespace: function(ch) {\n        // IE treats non-breaking space as \\u00A0\n        return (ch === ' ' || ch === '\\r' || ch === '\\t' ||\n            ch === '\\n' || ch === '\\v' || ch === '\\u00A0');\n    },\n\n    isIdentifierStart: function(ch) {\n        return this.options.isIdentifierStart ?\n            this.options.isIdentifierStart(ch, this.codePointAt(ch)) :\n            this.isValidIdentifierStart(ch);\n    },\n\n    isValidIdentifierStart: function(ch) {\n        return ('a' <= ch && ch <= 'z' ||\n            'A' <= ch && ch <= 'Z' ||\n            '_' === ch || ch === '$');\n    },\n\n    isIdentifierContinue: function(ch) {\n        return this.options.isIdentifierContinue ?\n            this.options.isIdentifierContinue(ch, this.codePointAt(ch)) :\n            this.isValidIdentifierContinue(ch);\n    },\n\n    isValidIdentifierContinue: function(ch, cp) {\n        return this.isValidIdentifierStart(ch, cp) || this.isNumber(ch);\n    },\n\n    codePointAt: function(ch) {\n        if (ch.length === 1) return ch.charCodeAt(0);\n        // eslint-disable-next-line no-bitwise\n        return (ch.charCodeAt(0) << 10) + ch.charCodeAt(1) - 0x35FDC00;\n    },\n\n    peekMultichar: function() {\n        var ch = this.text.charAt(this.index);\n        var peek = this.peek();\n        if (!peek) {\n            return ch;\n        }\n        var cp1 = ch.charCodeAt(0);\n        var cp2 = peek.charCodeAt(0);\n        if (cp1 >= 0xD800 && cp1 <= 0xDBFF && cp2 >= 0xDC00 && cp2 <= 0xDFFF) {\n            return ch + peek;\n        }\n        return ch;\n    },\n\n    isExpOperator: function(ch) {\n        return (ch === '-' || ch === '+' || this.isNumber(ch));\n    },\n\n    throwError: function(error, start, end) {\n        end = end || this.index;\n        var colStr = (isDefined(start)\n            ? 's ' + start +  '-' + this.index + ' [' + this.text.substring(start, end) + ']'\n            : ' ' + end);\n        throw new Error('lexerr', 'Lexer Error: {0} at column{1} in expression [{2}].',\n            error, colStr, this.text);\n    },\n\n    readNumber: function() {\n        var number = '';\n        var start = this.index;\n        while (this.index < this.text.length) {\n            var ch = lowercase(this.text.charAt(this.index));\n            if (ch === '.' || this.isNumber(ch)) {\n                number += ch;\n            } else {\n                var peekCh = this.peek();\n                if (ch === 'e' && this.isExpOperator(peekCh)) {\n                    number += ch;\n                } else if (this.isExpOperator(ch) &&\n                    peekCh && this.isNumber(peekCh) &&\n                    number.charAt(number.length - 1) === 'e') {\n                    number += ch;\n                } else if (this.isExpOperator(ch) &&\n                    (!peekCh || !this.isNumber(peekCh)) &&\n                    number.charAt(number.length - 1) === 'e') {\n                    this.throwError('Invalid exponent');\n                } else {\n                    break;\n                }\n            }\n            this.index++;\n        }\n        this.tokens.push({\n            index: start,\n            text: number,\n            constant: true,\n            value: Number(number)\n        });\n    },\n\n    readIdent: function() {\n        var start = this.index;\n        this.index += this.peekMultichar().length;\n        while (this.index < this.text.length) {\n            var ch = this.peekMultichar();\n            if (!this.isIdentifierContinue(ch)) {\n                break;\n            }\n            this.index += ch.length;\n        }\n        this.tokens.push({\n            index: start,\n            text: this.text.slice(start, this.index),\n            identifier: true\n        });\n    },\n\n    readString: function(quote) {\n        var start = this.index;\n        this.index++;\n        var string = '';\n        var rawString = quote;\n        var escape = false;\n        while (this.index < this.text.length) {\n            var ch = this.text.charAt(this.index);\n            rawString += ch;\n            if (escape) {\n                if (ch === 'u') {\n                    var hex = this.text.substring(this.index + 1, this.index + 5);\n                    if (!hex.match(/[\\da-f]{4}/i)) {\n                        this.throwError('Invalid unicode escape [\\\\u' + hex + ']');\n                    }\n                    this.index += 4;\n                    string += String.fromCharCode(parseInt(hex, 16));\n                } else {\n                    var rep = ESCAPE[ch];\n                    string = string + (rep || ch);\n                }\n                escape = false;\n            } else if (ch === '\\\\') {\n                escape = true;\n            } else if (ch === quote) {\n                this.index++;\n                this.tokens.push({\n                    index: start,\n                    text: rawString,\n                    constant: true,\n                    value: string\n                });\n                return;\n            } else {\n                string += ch;\n            }\n            this.index++;\n        }\n        this.throwError('Unterminated quote', start);\n    }\n};"]}