{"version":3,"sources":["../../src/main/ast.js"],"names":["AST","AdditiveExpression","Symbol","ArrayExpression","AssignmentExpression","CallExpression","CommaExpression","String","Number","EqualityExpression","Expression","Identifier","Literal","LogicalExpression","MemberExpression","MultiplicativeExpression","ObjectExpression","Property","RelationalExpression","SelfExpression","TernaryExpression","UnaryExpression","Literals","type","value","undefined"],"mappings":";;;;;AAAO,MAAMA,oBAAM;;AAEfC,wBAAoB,YAAaC,OAAO,oBAAP,CAFlB;AAGfC,qBAAiB,eAAgBD,OAAO,iBAAP,CAHlB;AAIfE,0BAAsB,UAAWF,OAAO,sBAAP,CAJlB;AAKfG,oBAAgB,gBAAiBH,OAAO,gBAAP,CALlB;AAMfI,qBAAiB,eAAgBJ,OAAO,iBAAP,CANlB;AAOfK,YAAQ,wBAAyBL,OAAO,QAAP,CAPlB;AAQfM,YAAQ,wBAAyBN,OAAO,QAAP,CARlB;AASfO,wBAAoB,YAAaP,OAAO,oBAAP,CATlB;AAUfQ,gBAAY,oBAAqBR,OAAO,YAAP,CAVlB;AAWfS,gBAAY,oBAAqBT,OAAO,YAAP,CAXlB;AAYfU,aAAS,uBAAwBV,OAAO,SAAP,CAZlB;AAafW,uBAAmB,aAAcX,OAAO,mBAAP,CAblB;AAcfY,sBAAkB,cAAeZ,OAAO,kBAAP,CAdlB;AAefa,8BAA0B,MAAOb,OAAO,0BAAP,CAflB;AAgBfc,sBAAkB,cAAed,OAAO,kBAAP,CAhBlB;AAiBfe,cAAU,sBAAuBf,OAAO,UAAP,CAjBlB;AAkBfgB,0BAAsB,UAAWhB,OAAO,sBAAP,CAlBlB;AAmBfiB,oBAAgB,gBAAiBjB,OAAO,gBAAP,CAnBlB;AAoBfkB,uBAAmB,aAAclB,OAAO,mBAAP,CApBlB;AAqBfmB,qBAAiB,eAAgBnB,OAAO,iBAAP,CArBlB;;AAuBfoB,cAAU;AAvBK,CAAZ;;AA0BPtB,IAAIsB,QAAJ,GAAe;AACX,YAAQ,EAACC,MAAMvB,IAAIY,OAAX,EAAoBY,OAAO,IAA3B,EADG;AAEX,aAAS,EAACD,MAAMvB,IAAIY,OAAX,EAAoBY,OAAO,KAA3B,EAFE;AAGX,YAAQ,EAACD,MAAMvB,IAAIY,OAAX,EAAoBY,OAAO,IAA3B,EAHG;AAIX,iBAAa,EAACD,MAAMvB,IAAIY,OAAX,EAAoBY,OAAOC,SAA3B,EAJF;AAKX,YAAQ,EAACF,MAAMvB,IAAImB,cAAX;AALG,CAAf","file":"ast.js","sourcesContent":["export const AST = {\n\n    AdditiveExpression: /*--------*/ Symbol(\"AdditiveExpression\"),\n    ArrayExpression: /*-----------*/ Symbol(\"ArrayExpression\"),\n    AssignmentExpression: /*------*/ Symbol(\"AssignmentExpression\"),\n    CallExpression: /*------------*/ Symbol(\"CallExpression\"),\n    CommaExpression: /*-----------*/ Symbol(\"CommaExpression\"),\n    String: /*--------------------*/ Symbol(\"String\"),\n    Number: /*--------------------*/ Symbol(\"Number\"),\n    EqualityExpression: /*--------*/ Symbol(\"EqualityExpression\"),\n    Expression: /*----------------*/ Symbol(\"Expression\"),\n    Identifier: /*----------------*/ Symbol(\"Identifier\"),\n    Literal: /*-------------------*/ Symbol(\"Literal\"),\n    LogicalExpression: /*---------*/ Symbol(\"LogicalExpression\"),\n    MemberExpression: /*----------*/ Symbol(\"MemberExpression\"),\n    MultiplicativeExpression: /*--*/ Symbol(\"MultiplicativeExpression\"),\n    ObjectExpression: /*----------*/ Symbol(\"ObjectExpression\"),\n    Property: /*------------------*/ Symbol(\"Property\"),\n    RelationalExpression: /*------*/ Symbol(\"RelationalExpression\"),\n    SelfExpression: /*------------*/ Symbol(\"SelfExpression\"),\n    TernaryExpression: /*---------*/ Symbol(\"TernaryExpression\"),\n    UnaryExpression: /*-----------*/ Symbol(\"UnaryExpression\"),\n\n    Literals: null\n};\n\nAST.Literals = {\n    'true': {type: AST.Literal, value: true},\n    'false': {type: AST.Literal, value: false},\n    'null': {type: AST.Literal, value: null},\n    'undefined': {type: AST.Literal, value: undefined},\n    'this': {type: AST.SelfExpression}\n};"]}